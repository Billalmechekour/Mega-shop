{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/user/Desktop/rayane/test/components/ui/sonner.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport { useTheme } from \"next-themes\"\r\nimport { Toaster as Sonner, ToasterProps } from \"sonner\"\r\n\r\nconst Toaster = ({ ...props }: ToasterProps) => {\r\n  const { theme = \"system\" } = useTheme()\r\n\r\n  return (\r\n    <Sonner\r\n      theme={theme as ToasterProps[\"theme\"]}\r\n      className=\"toaster group\"\r\n      toastOptions={{\r\n        classNames: {\r\n          toast:\r\n            \"group toast group-[.toaster]:bg-background group-[.toaster]:text-foreground group-[.toaster]:border-border group-[.toaster]:shadow-lg\",\r\n          description: \"group-[.toast]:text-muted-foreground\",\r\n          actionButton:\r\n            \"group-[.toast]:bg-primary group-[.toast]:text-primary-foreground font-medium\",\r\n          cancelButton:\r\n            \"group-[.toast]:bg-muted group-[.toast]:text-muted-foreground font-medium\",\r\n        },\r\n      }}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nexport { Toaster }\r\n"],"names":[],"mappings":";;;;AAEA;AACA;;;AAHA;;;AAKA,MAAM,UAAU,CAAC,EAAE,GAAG,OAAqB;;IACzC,MAAM,EAAE,QAAQ,QAAQ,EAAE,GAAG,CAAA,GAAA,mJAAA,CAAA,WAAQ,AAAD;IAEpC,qBACE,6LAAC,2IAAA,CAAA,UAAM;QACL,OAAO;QACP,WAAU;QACV,cAAc;YACZ,YAAY;gBACV,OACE;gBACF,aAAa;gBACb,cACE;gBACF,cACE;YACJ;QACF;QACC,GAAG,KAAK;;;;;;AAGf;GArBM;;QACyB,mJAAA,CAAA,WAAQ;;;KADjC","debugId":null}},
    {"offset": {"line": 57, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/user/Desktop/rayane/test/redux/storage.ts"],"sourcesContent":["import createWebStorage from \"redux-persist/lib/storage/createWebStorage\";\r\n\r\nconst createNoopStorage = () => {\r\n  return {\r\n    getItem(_key: string): Promise<string | null> {\r\n      return Promise.resolve(null);\r\n    },\r\n    setItem(_key: string, value: string): Promise<string> {\r\n      return Promise.resolve(value);\r\n    },\r\n    removeItem(_key: string): Promise<void> {\r\n      return Promise.resolve();\r\n    },\r\n  };\r\n};\r\n\r\nconst storage =\r\n  typeof window !== \"undefined\"\r\n    ? createWebStorage(\"local\")\r\n    : createNoopStorage();\r\n\r\nexport default storage;\r\n"],"names":[],"mappings":";;;AAAA;;AAEA,MAAM,oBAAoB;IACxB,OAAO;QACL,SAAQ,IAAY;YAClB,OAAO,QAAQ,OAAO,CAAC;QACzB;QACA,SAAQ,IAAY,EAAE,KAAa;YACjC,OAAO,QAAQ,OAAO,CAAC;QACzB;QACA,YAAW,IAAY;YACrB,OAAO,QAAQ,OAAO;QACxB;IACF;AACF;AAEA,MAAM,UACJ,uCACI,CAAA,GAAA,yKAAA,CAAA,UAAgB,AAAD,EAAE;uCAGR","debugId":null}},
    {"offset": {"line": 86, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/user/Desktop/rayane/test/redux/features/products/productsSlice.ts"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\nimport type { PayloadAction } from \"@reduxjs/toolkit\";\r\n\r\nexport type Color = {\r\n  name: string;\r\n  code: string;\r\n};\r\n\r\n// Define a type for the slice state\r\ninterface ProductsState {\r\n  colorSelection: Color;\r\n  sizeSelection: string;\r\n}\r\n\r\n// Define the initial state using that type\r\nconst initialState: ProductsState = {\r\n  colorSelection: {\r\n    name: \"Brown\",\r\n    code: \"bg-[#4F4631]\",\r\n  },\r\n  sizeSelection: \"Large\",\r\n};\r\n\r\nexport const productsSlice = createSlice({\r\n  name: \"products\",\r\n  // `createSlice` will infer the state type from the `initialState` argument\r\n  initialState,\r\n  reducers: {\r\n    setColorSelection: (state, action: PayloadAction<Color>) => {\r\n      state.colorSelection = action.payload;\r\n    },\r\n    setSizeSelection: (state, action: PayloadAction<string>) => {\r\n      state.sizeSelection = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { setColorSelection, setSizeSelection } = productsSlice.actions;\r\n\r\nexport default productsSlice.reducer;\r\n"],"names":[],"mappings":";;;;;;AAAA;;AAcA,2CAA2C;AAC3C,MAAM,eAA8B;IAClC,gBAAgB;QACd,MAAM;QACN,MAAM;IACR;IACA,eAAe;AACjB;AAEO,MAAM,gBAAgB,CAAA,GAAA,8LAAA,CAAA,cAAW,AAAD,EAAE;IACvC,MAAM;IACN,2EAA2E;IAC3E;IACA,UAAU;QACR,mBAAmB,CAAC,OAAO;YACzB,MAAM,cAAc,GAAG,OAAO,OAAO;QACvC;QACA,kBAAkB,CAAC,OAAO;YACxB,MAAM,aAAa,GAAG,OAAO,OAAO;QACtC;IACF;AACF;AAEO,MAAM,EAAE,iBAAiB,EAAE,gBAAgB,EAAE,GAAG,cAAc,OAAO;uCAE7D,cAAc,OAAO","debugId":null}},
    {"offset": {"line": 126, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/user/Desktop/rayane/test/lib/utils/index.ts"],"sourcesContent":["import { clsx, type ClassValue } from \"clsx\";\r\nimport { twMerge } from \"tailwind-merge\";\r\nimport { NextResponse } from \"next/server\";\r\n\r\nexport function cn(...inputs: ClassValue[]) {\r\n  return twMerge(clsx(inputs));\r\n}\r\n\r\nexport function jsonResponse(\r\n  data: Record<string, unknown>,\r\n  status: number = 200,\r\n  headers?: Record<string, string>\r\n): NextResponse {\r\n  return new NextResponse(JSON.stringify(data), {\r\n    status,\r\n    headers: { \"Content-Type\": \"application/json\", ...headers },\r\n  });\r\n}\r\n\r\nexport function errorHandler(err: unknown) {\r\n  console.error(\"API Error : \", err);\r\n\r\n  return jsonResponse(\r\n    { error: \"Une erreur est survenue. Veuillez rÃ©essayer plus tard !\" },\r\n    500\r\n  );\r\n}\r\n\r\nexport const compareArrays = (a: unknown[], b: unknown[]) => {\r\n  return a.toString() === b.toString();\r\n};\r\n"],"names":[],"mappings":";;;;;;AAAA;AACA;AACA;;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,CAAA,GAAA,8JAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,wIAAA,CAAA,OAAI,AAAD,EAAE;AACtB;AAEO,SAAS,aACd,IAA6B,EAC7B,SAAiB,GAAG,EACpB,OAAgC;IAEhC,OAAO,IAAI,iIAAA,CAAA,eAAY,CAAC,KAAK,SAAS,CAAC,OAAO;QAC5C;QACA,SAAS;YAAE,gBAAgB;YAAoB,GAAG,OAAO;QAAC;IAC5D;AACF;AAEO,SAAS,aAAa,GAAY;IACvC,QAAQ,KAAK,CAAC,gBAAgB;IAE9B,OAAO,aACL;QAAE,OAAO;IAA0D,GACnE;AAEJ;AAEO,MAAM,gBAAgB,CAAC,GAAc;IAC1C,OAAO,EAAE,QAAQ,OAAO,EAAE,QAAQ;AACpC","debugId":null}},
    {"offset": {"line": 168, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/user/Desktop/rayane/test/redux/features/carts/cartsSlice.ts"],"sourcesContent":["// Redux\r\nimport { createSlice } from \"@reduxjs/toolkit\";\r\nimport type { PayloadAction } from \"@reduxjs/toolkit\";\r\n\r\n// Utils & Types\r\nimport { compareArrays } from \"@/lib/utils\";\r\nimport { Discount } from \"@/lib/types/product.types\";\r\n\r\nconst calcAdjustedTotalPrice = (\r\n  totalPrice: number,\r\n  data: CartItem,\r\n  quantity?: number\r\n): number => {\r\n  return (\r\n    (totalPrice + data.discount.percentage > 0\r\n      ? Math.round(data.price - (data.price * data.discount.percentage) / 100)\r\n      : data.discount.amount > 0\r\n      ? Math.round(data.price - data.discount.amount)\r\n      : data.price) * (quantity ? quantity : data.quantity)\r\n  );\r\n};\r\n\r\nexport type RemoveCartItem = {\r\n  id: number;\r\n  attributes: string[];\r\n};\r\n\r\nexport type CartItem = {\r\n  id: number;\r\n  name: string;\r\n  srcUrl: string;\r\n  price: number;\r\n  attributes: string[];\r\n  discount: Discount;\r\n  quantity: number;\r\n};\r\n\r\nexport type Cart = {\r\n  items: CartItem[];\r\n  totalQuantities: number;\r\n};\r\n\r\n// Define a type for the slice state\r\ninterface CartsState {\r\n  cart: Cart | null;\r\n  totalPrice: number;\r\n  adjustedTotalPrice: number;\r\n  action: \"update\" | \"add\" | \"delete\" | null;\r\n}\r\n\r\n// Define the initial state using that type\r\nconst initialState: CartsState = {\r\n  cart: null,\r\n  totalPrice: 0,\r\n  adjustedTotalPrice: 0,\r\n  action: null,\r\n};\r\n\r\nexport const cartsSlice = createSlice({\r\n  name: \"carts\",\r\n  // `createSlice` will infer the state type from the `initialState` argument\r\n  initialState,\r\n  reducers: {\r\n    addToCart: (state, action: PayloadAction<CartItem>) => {\r\n      // if cart is empty then add\r\n      if (state.cart === null) {\r\n        state.cart = {\r\n          items: [action.payload],\r\n          totalQuantities: action.payload.quantity,\r\n        };\r\n        state.totalPrice =\r\n          state.totalPrice + action.payload.price * action.payload.quantity;\r\n        state.adjustedTotalPrice =\r\n          state.adjustedTotalPrice +\r\n          calcAdjustedTotalPrice(state.totalPrice, action.payload);\r\n        return;\r\n      }\r\n\r\n      // check item in cart\r\n      const isItemInCart = state.cart.items.find(\r\n        (item) =>\r\n          action.payload.id === item.id &&\r\n          compareArrays(action.payload.attributes, item.attributes)\r\n      );\r\n\r\n      if (isItemInCart) {\r\n        state.cart = {\r\n          ...state.cart,\r\n          items: state.cart.items.map((eachCartItem) => {\r\n            if (\r\n              eachCartItem.id === action.payload.id\r\n                ? !compareArrays(\r\n                    eachCartItem.attributes,\r\n                    isItemInCart.attributes\r\n                  )\r\n                : eachCartItem.id !== action.payload.id\r\n            )\r\n              return eachCartItem;\r\n\r\n            return {\r\n              ...isItemInCart,\r\n              quantity: action.payload.quantity + isItemInCart.quantity,\r\n            };\r\n          }),\r\n          totalQuantities: state.cart.totalQuantities + action.payload.quantity,\r\n        };\r\n        state.totalPrice =\r\n          state.totalPrice + action.payload.price * action.payload.quantity;\r\n        state.adjustedTotalPrice =\r\n          state.adjustedTotalPrice +\r\n          calcAdjustedTotalPrice(state.totalPrice, action.payload);\r\n        return;\r\n      }\r\n\r\n      state.cart = {\r\n        ...state.cart,\r\n        items: [...state.cart.items, action.payload],\r\n        totalQuantities: state.cart.totalQuantities + action.payload.quantity,\r\n      };\r\n      state.totalPrice =\r\n        state.totalPrice + action.payload.price * action.payload.quantity;\r\n      state.adjustedTotalPrice =\r\n        state.adjustedTotalPrice +\r\n        calcAdjustedTotalPrice(state.totalPrice, action.payload);\r\n    },\r\n    removeCartItem: (state, action: PayloadAction<RemoveCartItem>) => {\r\n      if (state.cart === null) return;\r\n\r\n      // check item in cart\r\n      const isItemInCart = state.cart.items.find(\r\n        (item) =>\r\n          action.payload.id === item.id &&\r\n          compareArrays(action.payload.attributes, item.attributes)\r\n      );\r\n\r\n      if (isItemInCart) {\r\n        state.cart = {\r\n          ...state.cart,\r\n          items: state.cart.items\r\n            .map((eachCartItem) => {\r\n              if (\r\n                eachCartItem.id === action.payload.id\r\n                  ? !compareArrays(\r\n                      eachCartItem.attributes,\r\n                      isItemInCart.attributes\r\n                    )\r\n                  : eachCartItem.id !== action.payload.id\r\n              )\r\n                return eachCartItem;\r\n\r\n              return {\r\n                ...isItemInCart,\r\n                quantity: eachCartItem.quantity - 1,\r\n              };\r\n            })\r\n            .filter((item) => item.quantity > 0),\r\n          totalQuantities: state.cart.totalQuantities - 1,\r\n        };\r\n\r\n        state.totalPrice = state.totalPrice - isItemInCart.price * 1;\r\n        state.adjustedTotalPrice =\r\n          state.adjustedTotalPrice -\r\n          calcAdjustedTotalPrice(isItemInCart.price, isItemInCart, 1);\r\n      }\r\n    },\r\n    remove: (\r\n      state,\r\n      action: PayloadAction<RemoveCartItem & { quantity: number }>\r\n    ) => {\r\n      if (!state.cart) return;\r\n\r\n      // check item in cart\r\n      const isItemInCart = state.cart.items.find(\r\n        (item) =>\r\n          action.payload.id === item.id &&\r\n          compareArrays(action.payload.attributes, item.attributes)\r\n      );\r\n\r\n      if (!isItemInCart) return;\r\n\r\n      state.cart = {\r\n        ...state.cart,\r\n        items: state.cart.items.filter((pItem) => {\r\n          return pItem.id === action.payload.id\r\n            ? !compareArrays(pItem.attributes, isItemInCart.attributes)\r\n            : pItem.id !== action.payload.id;\r\n        }),\r\n        totalQuantities: state.cart.totalQuantities - isItemInCart.quantity,\r\n      };\r\n      state.totalPrice =\r\n        state.totalPrice - isItemInCart.price * isItemInCart.quantity;\r\n      state.adjustedTotalPrice =\r\n        state.adjustedTotalPrice -\r\n        calcAdjustedTotalPrice(\r\n          isItemInCart.price,\r\n          isItemInCart,\r\n          isItemInCart.quantity\r\n        );\r\n    },\r\n  },\r\n});\r\n\r\nexport const { addToCart, removeCartItem, remove } = cartsSlice.actions;\r\n\r\nexport default cartsSlice.reducer;\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 286, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/user/Desktop/rayane/test/redux/store.ts"],"sourcesContent":["import { combineReducers, configureStore } from \"@reduxjs/toolkit\";\r\nimport { persistReducer, persistStore } from \"redux-persist\";\r\nimport storage from \"@/redux/storage\";\r\nimport productsReducer from \"./features/products/productsSlice\";\r\nimport cartsReducer from \"./features/carts/cartsSlice\";\r\n\r\nconst persistConfig = {\r\n  key: \"root\",\r\n  storage,\r\n  version: 1,\r\n  whitelist: [\"carts\"],\r\n};\r\n\r\nconst rootReducer = combineReducers({\r\n  products: productsReducer,\r\n  carts: cartsReducer,\r\n});\r\n\r\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\r\n\r\nexport const makeStore = () => {\r\n  const store = configureStore({\r\n    reducer: persistedReducer,\r\n    devTools: process.env.NODE_ENV !== \"production\",\r\n    middleware: (getDefaultMiddleware) =>\r\n      getDefaultMiddleware({\r\n        serializableCheck: false,\r\n      }),\r\n  });\r\n\r\n  const persistor = persistStore(store);\r\n  return { store, persistor };\r\n};\r\n\r\nconst store = makeStore().store;\r\n\r\n// Infer the type of the store\r\nexport type AppStore = typeof store;\r\n// Infer the `RootState` and `AppDispatch` types from the store itself\r\nexport type RootState = ReturnType<typeof store.getState>;\r\nexport type AppDispatch = typeof store.dispatch;\r\n\r\nexport { store };\r\n"],"names":[],"mappings":";;;;AAuBc;AAvBd;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;;;;;;AAEA,MAAM,gBAAgB;IACpB,KAAK;IACL,SAAA,mHAAA,CAAA,UAAO;IACP,SAAS;IACT,WAAW;QAAC;KAAQ;AACtB;AAEA,MAAM,cAAc,CAAA,GAAA,0IAAA,CAAA,kBAAe,AAAD,EAAE;IAClC,UAAU,iJAAA,CAAA,UAAe;IACzB,OAAO,2IAAA,CAAA,UAAY;AACrB;AAEA,MAAM,mBAAmB,CAAA,GAAA,wMAAA,CAAA,iBAAc,AAAD,EAAE,eAAe;AAEhD,MAAM,YAAY;IACvB,MAAM,QAAQ,CAAA,GAAA,8LAAA,CAAA,iBAAc,AAAD,EAAE;QAC3B,SAAS;QACT,UAAU,oDAAyB;QACnC,YAAY,CAAC,uBACX,qBAAqB;gBACnB,mBAAmB;YACrB;IACJ;IAEA,MAAM,YAAY,CAAA,GAAA,oMAAA,CAAA,eAAY,AAAD,EAAE;IAC/B,OAAO;QAAE;QAAO;IAAU;AAC5B;AAEA,MAAM,QAAQ,YAAY,KAAK","debugId":null}},
    {"offset": {"line": 341, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/components/ui/SpinnerLoader/SpinnerLoader.module.css [app-client] (css module)"],"sourcesContent":["__turbopack_context__.v({\n  \"Loader\": \"SpinnerLoader-module__bGQPXG__Loader\",\n  \"l2\": \"SpinnerLoader-module__bGQPXG__l2\",\n});\n"],"names":[],"mappings":"AAAA;AACA;AACA;AACA"}},
    {"offset": {"line": 351, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/user/Desktop/rayane/test/components/ui/SpinnerLoader/index.tsx"],"sourcesContent":["import React from \"react\";\r\nimport s from \"./SpinnerLoader.module.css\";\r\nimport cn from \"clsx\";\r\n\r\nconst SpinnerLoader = ({ className }: { className?: string }) => {\r\n  return <span className={cn(s.Loader, {}, className && className)}></span>;\r\n};\r\n\r\nexport default SpinnerLoader;\r\n"],"names":[],"mappings":";;;;AACA;AACA;;;;AAEA,MAAM,gBAAgB,CAAC,EAAE,SAAS,EAA0B;IAC1D,qBAAO,6LAAC;QAAK,WAAW,CAAA,GAAA,wIAAA,CAAA,UAAE,AAAD,EAAE,iKAAA,CAAA,UAAC,CAAC,MAAM,EAAE,CAAC,GAAG,aAAa;;;;;;AACxD;KAFM;uCAIS","debugId":null}},
    {"offset": {"line": 382, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/user/Desktop/rayane/test/app/providers.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { Session } from \"next-auth\";\r\nimport { SessionProvider } from \"next-auth/react\";\r\nimport { Provider as ReduxProvider } from \"react-redux\";\r\nimport { PersistGate } from \"redux-persist/integration/react\";\r\n\r\n// Redux\r\nimport { makeStore } from \"@/redux/store\";\r\n\r\n// UI components\r\nimport SpinnerbLoader from \"@/components/ui/SpinnerLoader\";\r\n\r\ntype Props = {\r\n  children: React.ReactNode;\r\n  session?: Session;\r\n};\r\n\r\nconst Providers = ({ children, session }: Props) => {\r\n  const { store, persistor } = makeStore();\r\n\r\n  return (\r\n    <SessionProvider session={session}>\r\n      <ReduxProvider store={store}>\r\n        <PersistGate\r\n          loading={\r\n            <div className=\"flex items-center justify-center h-96\">\r\n              <SpinnerbLoader className=\"w-10 border-2 border-gray-300 border-r-gray-600\" />\r\n            </div>\r\n          }\r\n          persistor={persistor}\r\n        >\r\n          {children}\r\n        </PersistGate>\r\n      </ReduxProvider>\r\n    </SessionProvider>\r\n  );\r\n};\r\n\r\nexport default Providers;\r\n"],"names":[],"mappings":";;;;AAGA;AACA;AACA;AAEA,QAAQ;AACR;AAEA,gBAAgB;AAChB;AAXA;;;;;;;AAkBA,MAAM,YAAY,CAAC,EAAE,QAAQ,EAAE,OAAO,EAAS;IAC7C,MAAM,EAAE,KAAK,EAAE,SAAS,EAAE,GAAG,CAAA,GAAA,iHAAA,CAAA,YAAS,AAAD;IAErC,qBACE,6LAAC,wIAAA,CAAA,kBAAe;QAAC,SAAS;kBACxB,cAAA,6LAAC,4JAAA,CAAA,WAAa;YAAC,OAAO;sBACpB,cAAA,6LAAC,iKAAA,CAAA,cAAW;gBACV,uBACE,6LAAC;oBAAI,WAAU;8BACb,cAAA,6LAAC,8IAAA,CAAA,UAAc;wBAAC,WAAU;;;;;;;;;;;gBAG9B,WAAW;0BAEV;;;;;;;;;;;;;;;;AAKX;KAnBM;uCAqBS","debugId":null}}]
}