{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/user/rayane/test/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nfunction Card({ className, ...props }: React.ComponentProps<\"div\">) {\r\n  return (\r\n    <div\r\n      data-slot=\"card\"\r\n      className={cn(\r\n        \"bg-card text-card-foreground flex flex-col gap-6 rounded-xl border py-6 shadow-sm\",\r\n        className\r\n      )}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nfunction CardHeader({ className, ...props }: React.ComponentProps<\"div\">) {\r\n  return (\r\n    <div\r\n      data-slot=\"card-header\"\r\n      className={cn(\"flex flex-col gap-1.5 px-6\", className)}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nfunction CardTitle({ className, ...props }: React.ComponentProps<\"div\">) {\r\n  return (\r\n    <div\r\n      data-slot=\"card-title\"\r\n      className={cn(\"leading-none font-semibold\", className)}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nfunction CardDescription({ className, ...props }: React.ComponentProps<\"div\">) {\r\n  return (\r\n    <div\r\n      data-slot=\"card-description\"\r\n      className={cn(\"text-muted-foreground text-sm\", className)}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nfunction CardContent({ className, ...props }: React.ComponentProps<\"div\">) {\r\n  return (\r\n    <div\r\n      data-slot=\"card-content\"\r\n      className={cn(\"px-6\", className)}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nfunction CardFooter({ className, ...props }: React.ComponentProps<\"div\">) {\r\n  return (\r\n    <div\r\n      data-slot=\"card-footer\"\r\n      className={cn(\"flex items-center px-6\", className)}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\r\n"],"names":[],"mappings":";;;;;;;;;AAEA;;;AAEA,SAAS,KAAK,EAAE,SAAS,EAAE,GAAG,OAAoC;IAChE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,wHAAA,CAAA,KAAE,AAAD,EACV,qFACA;QAED,GAAG,KAAK;;;;;;AAGf;KAXS;AAaT,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,wHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGf;MARS;AAUT,SAAS,UAAU,EAAE,SAAS,EAAE,GAAG,OAAoC;IACrE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,wHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGf;MARS;AAUT,SAAS,gBAAgB,EAAE,SAAS,EAAE,GAAG,OAAoC;IAC3E,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,wHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGf;MARS;AAUT,SAAS,YAAY,EAAE,SAAS,EAAE,GAAG,OAAoC;IACvE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,wHAAA,CAAA,KAAE,AAAD,EAAE,QAAQ;QACrB,GAAG,KAAK;;;;;;AAGf;MARS;AAUT,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,wHAAA,CAAA,KAAE,AAAD,EAAE,0BAA0B;QACvC,GAAG,KAAK;;;;;;AAGf;MARS","debugId":null}},
    {"offset": {"line": 108, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/user/rayane/test/components/ui/tabs.tsx"],"sourcesContent":["import * as React from \"react\"\r\n\r\ninterface TabsProps extends React.HTMLAttributes<HTMLDivElement> {\r\n  defaultValue?: string\r\n  value?: string\r\n  onValueChange?: (value: string) => void\r\n}\r\n\r\nconst Tabs = React.forwardRef<HTMLDivElement, TabsProps>(\r\n  ({ className, defaultValue, value, onValueChange, children, ...props }, ref) => {\r\n    const [selectedTab, setSelectedTab] = React.useState(value || defaultValue || \"\")\r\n    \r\n    React.useEffect(() => {\r\n      if (value !== undefined) {\r\n        setSelectedTab(value)\r\n      }\r\n    }, [value])\r\n    \r\n    const handleTabChange = (newValue: string) => {\r\n      setSelectedTab(newValue)\r\n      onValueChange?.(newValue)\r\n    }\r\n    \r\n    // Pass the current value and change handler to children\r\n    const childrenWithProps = React.Children.map(children, child => {\r\n      if (React.isValidElement(child)) {\r\n        return React.cloneElement(child, {\r\n          selectedTab,\r\n          onSelect: handleTabChange,\r\n        })\r\n      }\r\n      return child\r\n    })\r\n    \r\n    return (\r\n      <div ref={ref} className={className} {...props}>\r\n        {childrenWithProps}\r\n      </div>\r\n    )\r\n  }\r\n)\r\nTabs.displayName = \"Tabs\"\r\n\r\ninterface TabsListProps extends React.HTMLAttributes<HTMLDivElement> {\r\n  selectedTab?: string\r\n  onSelect?: (value: string) => void\r\n}\r\n\r\nconst TabsList = React.forwardRef<HTMLDivElement, TabsListProps>(\r\n  ({ className, children, selectedTab, onSelect, ...props }, ref) => {\r\n    // Pass the current value and change handler to children\r\n    const childrenWithProps = React.Children.map(children, child => {\r\n      if (React.isValidElement(child)) {\r\n        return React.cloneElement(child, {\r\n          selectedTab,\r\n          onSelect,\r\n        })\r\n      }\r\n      return child\r\n    })\r\n    \r\n    return (\r\n      <div\r\n        ref={ref}\r\n        className={`inline-flex h-10 items-center justify-center rounded-md bg-gray-100 p-1 ${className}`}\r\n        {...props}\r\n      >\r\n        {childrenWithProps}\r\n      </div>\r\n    )\r\n  }\r\n)\r\nTabsList.displayName = \"TabsList\"\r\n\r\ninterface TabsTriggerProps extends React.ButtonHTMLAttributes<HTMLButtonElement> {\r\n  value: string\r\n  selectedTab?: string\r\n  onSelect?: (value: string) => void\r\n}\r\n\r\nconst TabsTrigger = React.forwardRef<HTMLButtonElement, TabsTriggerProps>(\r\n  ({ className, value, selectedTab, onSelect, children, ...props }, ref) => {\r\n    const isActive = selectedTab === value\r\n    \r\n    return (\r\n      <button\r\n        ref={ref}\r\n        className={`\r\n          inline-flex items-center justify-center whitespace-nowrap rounded-sm px-3 py-1.5 text-sm font-medium\r\n          ${isActive \r\n            ? 'bg-white text-black shadow-sm' \r\n            : 'text-gray-600 hover:text-gray-900'\r\n          }\r\n          ${className}\r\n        `}\r\n        onClick={() => onSelect?.(value)}\r\n        {...props}\r\n      >\r\n        {children}\r\n      </button>\r\n    )\r\n  }\r\n)\r\nTabsTrigger.displayName = \"TabsTrigger\"\r\n\r\ninterface TabsContentProps extends React.HTMLAttributes<HTMLDivElement> {\r\n  value: string\r\n  selectedTab?: string\r\n}\r\n\r\nconst TabsContent = React.forwardRef<HTMLDivElement, TabsContentProps>(\r\n  ({ className, value, selectedTab, children, ...props }, ref) => {\r\n    const isActive = selectedTab === value\r\n    \r\n    if (!isActive) return null\r\n    \r\n    return (\r\n      <div\r\n        ref={ref}\r\n        className={`mt-2 ${className}`}\r\n        {...props}\r\n      >\r\n        {children}\r\n      </div>\r\n    )\r\n  }\r\n)\r\nTabsContent.displayName = \"TabsContent\"\r\n\r\nexport { Tabs, TabsList, TabsTrigger, TabsContent }"],"names":[],"mappings":";;;;;;;AAAA;;;;AAQA,MAAM,qBAAO,GAAA,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,UAC1B,CAAC,EAAE,SAAS,EAAE,YAAY,EAAE,KAAK,EAAE,aAAa,EAAE,QAAQ,EAAE,GAAG,OAAO,EAAE;;IACtE,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAc,AAAD,EAAE,SAAS,gBAAgB;IAE9E,CAAA,GAAA,6JAAA,CAAA,YAAe,AAAD;0BAAE;YACd,IAAI,UAAU,WAAW;gBACvB,eAAe;YACjB;QACF;yBAAG;QAAC;KAAM;IAEV,MAAM,kBAAkB,CAAC;QACvB,eAAe;QACf,gBAAgB;IAClB;IAEA,wDAAwD;IACxD,MAAM,oBAAoB,6JAAA,CAAA,WAAc,CAAC,GAAG,CAAC,UAAU,CAAA;QACrD,kBAAI,CAAA,GAAA,6JAAA,CAAA,iBAAoB,AAAD,EAAE,QAAQ;YAC/B,qBAAO,CAAA,GAAA,6JAAA,CAAA,eAAkB,AAAD,EAAE,OAAO;gBAC/B;gBACA,UAAU;YACZ;QACF;QACA,OAAO;IACT;IAEA,qBACE,6LAAC;QAAI,KAAK;QAAK,WAAW;QAAY,GAAG,KAAK;kBAC3C;;;;;;AAGP;;AAEF,KAAK,WAAW,GAAG;AAOnB,MAAM,yBAAW,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAC9B,CAAC,EAAE,SAAS,EAAE,QAAQ,EAAE,WAAW,EAAE,QAAQ,EAAE,GAAG,OAAO,EAAE;IACzD,wDAAwD;IACxD,MAAM,oBAAoB,6JAAA,CAAA,WAAc,CAAC,GAAG,CAAC,UAAU,CAAA;QACrD,kBAAI,CAAA,GAAA,6JAAA,CAAA,iBAAoB,AAAD,EAAE,QAAQ;YAC/B,qBAAO,CAAA,GAAA,6JAAA,CAAA,eAAkB,AAAD,EAAE,OAAO;gBAC/B;gBACA;YACF;QACF;QACA,OAAO;IACT;IAEA,qBACE,6LAAC;QACC,KAAK;QACL,WAAW,CAAC,wEAAwE,EAAE,WAAW;QAChG,GAAG,KAAK;kBAER;;;;;;AAGP;;AAEF,SAAS,WAAW,GAAG;AAQvB,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QACjC,CAAC,EAAE,SAAS,EAAE,KAAK,EAAE,WAAW,EAAE,QAAQ,EAAE,QAAQ,EAAE,GAAG,OAAO,EAAE;IAChE,MAAM,WAAW,gBAAgB;IAEjC,qBACE,6LAAC;QACC,KAAK;QACL,WAAW,CAAC;;UAEV,EAAE,WACE,kCACA,oCACH;UACD,EAAE,UAAU;QACd,CAAC;QACD,SAAS,IAAM,WAAW;QACzB,GAAG,KAAK;kBAER;;;;;;AAGP;;AAEF,YAAY,WAAW,GAAG;AAO1B,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QACjC,CAAC,EAAE,SAAS,EAAE,KAAK,EAAE,WAAW,EAAE,QAAQ,EAAE,GAAG,OAAO,EAAE;IACtD,MAAM,WAAW,gBAAgB;IAEjC,IAAI,CAAC,UAAU,OAAO;IAEtB,qBACE,6LAAC;QACC,KAAK;QACL,WAAW,CAAC,KAAK,EAAE,WAAW;QAC7B,GAAG,KAAK;kBAER;;;;;;AAGP;;AAEF,YAAY,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 237, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/user/rayane/test/app/admin/page.tsx"],"sourcesContent":["\r\n'use client'\r\n\r\nimport { useEffect, useState } from 'react'\r\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card'\r\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs'\r\nimport { Separator } from '@/components/ui/separator'\r\nimport { DollarSign, Package, ShoppingCart } from 'lucide-react'\r\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer, Legend } from 'recharts'\r\n\r\n\r\n// Types\r\ninterface Product {\r\n  id: string\r\n  name: string\r\n  price: number\r\n  imageUrl: string\r\n  totalSold: number\r\n  revenue: number\r\n}\r\n\r\ninterface Sale {\r\n  id: string\r\n  buyerName: string\r\n  productName: string\r\n  quantity: number\r\n  totalPaid: number\r\n  date: Date\r\n}\r\n\r\ninterface SalesData {\r\n  name: string\r\n  sales: number\r\n}\r\n\r\nexport default function AdminDashboard() {\r\n  const [userName, setUserName] = useState('Mtf') ; // from db\r\n  const [activeTab, setActiveTab] = useState('week')\r\n  const [topSellingProduct, setTopSellingProduct] = useState<Product | null>(null) // from db (le produits qui est le plus vendue (par rapport au contite))\r\n  const [topRevenueProduct, setTopRevenueProduct] = useState<Product | null>(null) // from db (le produit qui a generer le plus de revenue)\r\n  const [recentSales, setRecentSales] = useState<Sale[]>([]) // from db (les 5 dernieres ventes)\r\n  const [salesData, setSalesData] = useState<SalesData[]>([]) \r\n  \r\n  // Fetch dashboard data\r\n  useEffect(() => {\r\n    // fetch this from your API\r\n    fetchDashboardData(activeTab)\r\n    \r\n  }, [activeTab])\r\n  \r\n   // Wayi atchangit s api call ,en effet vous etes besoin des sales (vents) de jours par heur 00 -->4 , 4-->8 , 8 --> 12 , 12 --> 16 , 14--> 20 \r\n  // pour chaque jours \r\n  // pour chaque semain de moins current\r\n  // pandant l'anne derniere ... \r\n  const fetchDashboardData = async (period: string) => {\r\n   \r\n      let data: SalesData[] = []\r\n      \r\n      switch(period) {\r\n        case 'day':\r\n          data = [\r\n            { name: '12AM', sales: 5 },\r\n            { name: '4AM', sales: 2 },\r\n            { name: '8AM', sales: 8 },\r\n            { name: '12PM', sales: 15 },\r\n            { name: '4PM', sales: 25 },\r\n            { name: '8PM', sales: 18 },\r\n          ]\r\n          break;\r\n        case 'week':\r\n          data = [\r\n            { name: 'Mon', sales: 45 },\r\n            { name: 'Tue', sales: 52 },\r\n            { name: 'Wed', sales: 49 },\r\n            { name: 'Thu', sales: 62 },\r\n            { name: 'Fri', sales: 78 },\r\n            { name: 'Sat', sales: 85 },\r\n            { name: 'Sun', sales: 70 },\r\n          ]\r\n          break;\r\n        case 'month':\r\n          data = [\r\n            { name: 'Week 1', sales: 320 },\r\n            { name: 'Week 2', sales: 280 },\r\n            { name: 'Week 3', sales: 310 },\r\n            { name: 'Week 4', sales: 350 },\r\n          ]\r\n          break;\r\n        case 'year':\r\n          data = [\r\n            { name: 'Jan', sales: 1200 },\r\n            { name: 'Feb', sales: 1100 },\r\n            { name: 'Mar', sales: 1300 },\r\n            { name: 'Apr', sales: 1400 },\r\n            { name: 'May', sales: 1500 },\r\n            { name: 'Jun', sales: 1700 },\r\n            { name: 'Jul', sales: 1600 },\r\n            { name: 'Aug', sales: 1400 },\r\n            { name: 'Sep', sales: 1300 },\r\n            { name: 'Oct', sales: 1200 },\r\n            { name: 'Nov', sales: 1500 },\r\n            { name: 'Dec', sales: 1800 },\r\n          ]\r\n          break;\r\n      }\r\n      \r\n      setSalesData(data)\r\n      \r\n      // Remplacer ca avec une api call \r\n      setTopSellingProduct({\r\n        id: '1',\r\n        name: 'Premium Headphones',\r\n        price: 199.99,\r\n        imageUrl: '/images/headphones.jpg',\r\n        totalSold: 543,\r\n        revenue: 108594.57\r\n      })\r\n      \r\n      // meme chose\r\n      setTopRevenueProduct({\r\n        id: '2',\r\n        name: 'Gaming Laptop',\r\n        price: 1299.99,\r\n        imageUrl: '/images/laptop.jpg',\r\n        totalSold: 126,\r\n        revenue: 163798.74\r\n      })\r\n      \r\n      // meme chose\r\n      setRecentSales([\r\n        {\r\n          id: 's1',\r\n          buyerName: 'John Doe',\r\n          productName: 'Gaming Laptop',\r\n          quantity: 1,\r\n          totalPaid: 1299.99,\r\n          date: new Date(Date.now() - 1000 * 60 * 30) // 30 mins ago\r\n        },\r\n        {\r\n          id: 's2',\r\n          buyerName: 'Jane Smith',\r\n          productName: 'Premium Headphones',\r\n          quantity: 2,\r\n          totalPaid: 399.98,\r\n          date: new Date(Date.now() - 1000 * 60 * 60 * 2) // 2 hours ago\r\n        },\r\n        {\r\n          id: 's3',\r\n          buyerName: 'Mike Johnson',\r\n          productName: 'Wireless Keyboard',\r\n          quantity: 1,\r\n          totalPaid: 89.99,\r\n          date: new Date(Date.now() - 1000 * 60 * 60 * 5) // 5 hours ago\r\n        },\r\n        {\r\n          id: 's4',\r\n          buyerName: 'Sarah Williams',\r\n          productName: 'Smart Watch',\r\n          quantity: 1,\r\n          totalPaid: 249.99,\r\n          date: new Date(Date.now() - 1000 * 60 * 60 * 8) // 8 hours ago\r\n        },\r\n        {\r\n          id: 's5',\r\n          buyerName: 'David Brown',\r\n          productName: 'Bluetooth Speaker',\r\n          quantity: 2,\r\n          totalPaid: 159.98,\r\n          date: new Date(Date.now() - 1000 * 60 * 60 * 12) // 12 hours ago\r\n        }\r\n      ])\r\n   \r\n  }\r\n\r\n  // Function par deepSeek pour formater le temps de vente (maintenu ,X min ago , X hour Ago , la date complete)\r\n  const formatRelativeTime = (date: Date) => {\r\n    const now = new Date();\r\n    const diffMs = now.getTime() - date.getTime();\r\n    const diffSec = Math.round(diffMs / 1000);\r\n    const diffMin = Math.round(diffSec / 60);\r\n    const diffHour = Math.round(diffMin / 60);\r\n    \r\n    if (diffMin < 1) {\r\n      return 'maintenu';\r\n    } else if (diffMin < 60) {\r\n      return `${diffMin} min ago`;\r\n    } else if (diffHour < 24) {\r\n      return `${diffHour} hour${diffHour > 1 ? 's' : ''} ago`;\r\n    } else {\r\n      return date.toLocaleDateString();\r\n    }\r\n  };\r\n  \r\n  return (\r\n    <div className=\"container mx-auto p-6\">\r\n      <header className=\"mb-8\">\r\n        <h1 className=\"text-3xl font-bold\">Hello, {userName}</h1>\r\n        <p className=\"text-gray-500\">Bienvenue dans l'aperçu de votre tableau de bord</p>\r\n      </header>\r\n      \r\n      <div className=\"grid gap-6\">\r\n        {/* Sales Chart */}\r\n        <Card className='border-blue-700'>\r\n          <CardHeader className=\"pb-2\">\r\n            <CardTitle>Aperçu des ventes</CardTitle>\r\n            <p className=\"text-sm text-gray-500\">Visualisez vos performances de vente par période</p>\r\n          </CardHeader>\r\n          <CardContent>\r\n            <Tabs defaultValue=\"week\" value={activeTab} onValueChange={setActiveTab}>\r\n             \r\n                <TabsList>\r\n                  <TabsTrigger value=\"day\">Jour</TabsTrigger>\r\n                  <TabsTrigger value=\"week\">Semaine</TabsTrigger>\r\n                  <TabsTrigger value=\"month\">Moins</TabsTrigger>\r\n                  <TabsTrigger value=\"year\">Annee</TabsTrigger>\r\n                </TabsList>\r\n              \r\n              <TabsContent value=\"day\" className=\"space-y-4\">\r\n                <ChartDisplay data={salesData} />\r\n              </TabsContent>\r\n              \r\n              <TabsContent value=\"week\" className=\"space-y-4\">\r\n                <ChartDisplay data={salesData} />\r\n              </TabsContent>\r\n              \r\n              <TabsContent value=\"month\" className=\"space-y-4\">\r\n                <ChartDisplay data={salesData} />\r\n              </TabsContent>\r\n              \r\n              <TabsContent value=\"year\" className=\"space-y-4\">\r\n                <ChartDisplay data={salesData} />\r\n              </TabsContent>\r\n            </Tabs>\r\n          </CardContent>\r\n        </Card>\r\n        \r\n        {/* Product Stats Cards */}\r\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n          {/* Most Sold Product Card */}\r\n          <Card className='border-blue-700'>\r\n            <CardHeader className=\"flex flex-row items-center justify-between pb-2 space-y-0\">\r\n              <CardTitle className=\"text-sm font-medium\">Produit le plus vendu</CardTitle>\r\n              <Package className=\"h-4 w-4 text-gray-500\" />\r\n            </CardHeader>\r\n            <CardContent>\r\n              {topSellingProduct ? (\r\n                <div className=\"space-y-2\">\r\n                  <p className=\"text-2xl font-bold\">{topSellingProduct.name}</p>\r\n                  {/*   tu peux ajouter une image de produit jsp comment vous avoir les photo nii */}\r\n                  <div className=\"flex items-center\">\r\n                    <ShoppingCart className=\"mr-2 h-4 w-4 text-gray-500\" />\r\n                    <p className=\"text-gray-500\">{topSellingProduct.totalSold} unités vendues</p>\r\n                  </div>\r\n                </div>\r\n              ) : (\r\n                <p>Loading...</p>\r\n              )}\r\n            </CardContent>\r\n          </Card>\r\n          \r\n          {/* Highest Revenue Product Card */}\r\n          <Card className='border-blue-700'>\r\n            <CardHeader className=\"flex flex-row items-center justify-between pb-2 space-y-0\">\r\n              <CardTitle className=\"text-sm font-medium\">Produit à revenus les plus élevés</CardTitle>\r\n              <DollarSign className=\"h-4 w-4 text-gray-500\" />\r\n            </CardHeader>\r\n            <CardContent>\r\n              {topRevenueProduct ? (\r\n                <div className=\"space-y-2\">\r\n                  <p className=\"text-2xl font-bold\">{topRevenueProduct.name}</p>\r\n                  <div className=\"flex items-center\">\r\n                    <DollarSign className=\"mr-2 h-4 w-4 text-gray-500\" />\r\n                    <p className=\"text-gray-500\">${topRevenueProduct.revenue.toLocaleString(undefined, { minimumFractionDigits: 2, maximumFractionDigits: 2 })}</p>\r\n                  </div>\r\n                </div>\r\n              ) : (\r\n                <p>Loading...</p>\r\n              )}\r\n            </CardContent>\r\n          </Card>\r\n        </div>\r\n        \r\n        {/* Recent Sales */}\r\n        <Card className='border-blue-700'>\r\n          <CardHeader>\r\n            <CardTitle>Ventes récentes</CardTitle>\r\n            <p className=\"text-sm text-gray-500\">Les 5 dernières ventes de votre magasin</p>\r\n          </CardHeader>\r\n          <CardContent>\r\n            <div className=\"space-y-4\">\r\n              {recentSales.length > 0 ? (\r\n                recentSales.map((sale) => (\r\n                  <div key={sale.id} className=\"flex items-center\">\r\n                    <div className=\"space-y-1 flex-1\">\r\n                      <p className=\"text-sm font-medium leading-none\">{sale.buyerName}</p>\r\n                      <p className=\"text-sm text-gray-500\">\r\n                        {sale.productName} x {sale.quantity}\r\n                      </p>\r\n                    </div>\r\n                    <div className=\"ml-auto text-right space-y-1\">\r\n                      <p className=\"text-sm font-medium\">${sale.totalPaid.toFixed(2)}</p>\r\n                      <p className=\"text-xs text-gray-500\">\r\n                        {formatRelativeTime(sale.date)}\r\n                      </p>\r\n                    </div>\r\n                  </div>\r\n                ))\r\n              ) : (\r\n                <p>Aucune vente récente ...</p>\r\n              )}\r\n            </div>\r\n          </CardContent>\r\n        </Card>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction ChartDisplay({ data }: { data: SalesData[] }) {\r\n  return (\r\n    <div className=\"h-80\">\r\n      <ResponsiveContainer width=\"100%\" height=\"100%\">\r\n        <LineChart\r\n          data={data}\r\n          margin={{\r\n            top: 5,\r\n            right: 30,\r\n            left: 20,\r\n            bottom: 5,\r\n          }}\r\n        >\r\n          <CartesianGrid strokeDasharray=\"3 3\" />\r\n          <XAxis dataKey=\"name\" />\r\n          <YAxis />\r\n          <Tooltip />\r\n          <Legend />\r\n          <Line\r\n            type=\"monotone\"\r\n            dataKey=\"sales\"\r\n            stroke=\"#2016de\"\r\n            strokeWidth={\"2px\"}\r\n            activeDot={{ r: 8 }}\r\n          />\r\n        </LineChart>\r\n      </ResponsiveContainer>\r\n    </div>\r\n  )\r\n}"],"names":[],"mappings":"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","debugId":null}}]
}